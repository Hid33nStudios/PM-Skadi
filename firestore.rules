rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Reglas para la colección principal 'pm' (Planeta Motos)
    match /pm/{userId} {
      // Solo el usuario autenticado puede acceder a sus propios datos
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // PERMISO ESPECIAL: Permitir conteo de categorías para debugging
      allow read: if request.auth != null 
        && (request.auth.uid == userId || 
            get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin');
      
      // Subcolecciones del usuario
      match /products/{productId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // PERMISO ESPECIAL: Admins pueden leer productos de otros usuarios para diagnóstico
        allow read: if request.auth != null 
          && (request.auth.uid == userId || 
              get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin');
        
        // Validación de datos de productos
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['name', 'price', 'stock', 'categoryId', 'createdAt', 'updatedAt'])
          && request.resource.data.name is string
          && request.resource.data.name.size() > 0
          && request.resource.data.price is number
          && request.resource.data.price > 0
          && request.resource.data.stock is int
          && request.resource.data.stock >= 0
          && request.resource.data.categoryId is string
          && request.resource.data.categoryId.size() > 0;
          
        allow update: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['name', 'price', 'stock', 'categoryId', 'updatedAt'])
          && request.resource.data.name is string
          && request.resource.data.name.size() > 0
          && request.resource.data.price is number
          && request.resource.data.price > 0
          && request.resource.data.stock is int
          && request.resource.data.stock >= 0
          && request.resource.data.categoryId is string
          && request.resource.data.categoryId.size() > 0;
      }
      
      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // PERMISO ESPECIAL: Admins pueden leer categorías de otros usuarios para diagnóstico
        allow read: if request.auth != null 
          && (request.auth.uid == userId || 
              get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin');
        
        // Validación de datos de categorías
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['name', 'createdAt', 'updatedAt'])
          && request.resource.data.name is string
          && request.resource.data.name.size() > 0;
          
        allow update: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['name', 'updatedAt'])
          && request.resource.data.name is string
          && request.resource.data.name.size() > 0;
      }
      
      match /sales/{saleId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // PERMISO ESPECIAL: Admins pueden leer ventas de otros usuarios para diagnóstico
        allow read: if request.auth != null 
          && (request.auth.uid == userId || 
              get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin');
        
        // Validación de datos de ventas
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['productId', 'productName', 'quantity', 'price', 'amount', 'date', 'createdAt'])
          && request.resource.data.productId is string
          && request.resource.data.productName is string
          && request.resource.data.quantity is int
          && request.resource.data.quantity > 0
          && request.resource.data.price is number
          && request.resource.data.price > 0
          && request.resource.data.amount is number
          && request.resource.data.amount > 0;
      }
      
      match /movements/{movementId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        
        // PERMISO ESPECIAL: Admins pueden leer movimientos de otros usuarios para diagnóstico
        allow read: if request.auth != null 
          && (request.auth.uid == userId || 
              get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin');
        
        // Validación de datos de movimientos
        allow create: if request.auth != null 
          && request.auth.uid == userId
          && request.resource.data.keys().hasAll(['productId', 'productName', 'type', 'quantity', 'date', 'createdAt'])
          && request.resource.data.productId is string
          && request.resource.data.productName is string
          && request.resource.data.type in ['entry', 'exit']
          && request.resource.data.quantity is int
          && request.resource.data.quantity > 0;
      }
      
      // Datos del usuario (perfil)
      allow read, write: if request.auth != null 
        && request.auth.uid == userId
        && request.resource.data.keys().hasAll(['username', 'email', 'role', 'createdAt'])
        && request.resource.data.username is string
        && request.resource.data.email is string
        && request.resource.data.role in ['user', 'admin'];
    }
    
    // Reglas para configuración global (solo admin)
    match /config/{configId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && get(/databases/$(database)/documents/pm/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Reglas para logs de auditoría (solo lectura para usuarios autenticados)
    match /audit_logs/{logId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && request.auth.uid == resource.data.userId;
    }
    
    // Denegar acceso a cualquier otra colección
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 